// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

/*
All of these responses where generated by GPT using a prompt similar to:

```
Here's a JavaScript string literal template:

`I couldn't find a ${item} on your ${list} list.`

Create a JavaScript array with 7 variations of the template.
The variations should be helpful, creative, clever, and very friendly.
The variations should always use the back tick `` syntax.
The variations should always include ${item} and ${list} variables.
```

7 variations were asked for so that we can remove the 2 we like the least.
*/

/**
 * Generates a greeting message for the user.
 * @returns {string} The greeting message.
 */
export function greeting(): string {
    return getRandomResponse([
        'Welcome to List Bot! Type /reset to delete all existing lists.',
        "Hello! I'm List Bot. Use /reset to delete all your lists.",
        "Hi there! I'm here to help you manage your lists. Use /reset to delete all lists.",
        "Greetings! I'm List Bot. Type /reset to delete all your list.",
        'Hey there! List Bot here. You can use /reset to delete all lists.'
    ]);
}

/**
 * Resets all lists and returns a message indicating that the reset was successful.
 * @returns {string} The response message.
 */
export function reset(): string {
    return getRandomResponse([
        'Resetting all lists. All lists have been deleted.',
        'Starting fresh. All lists have been reset.',
        'All lists have been cleared. Ready for new lists!',
        'Cleaning slate. All lists have been reset.',
        'All lists have been wiped. Ready for new lists!'
    ]);
}

/**
 * Generates a response message for when an item is not found on a list.
 * @param {string} list The name of the list.
 * @param {string} item The name of the item.
 * @returns {string} The response message.
 */
export function itemNotFound(list: string, item: string): string {
    return getRandomResponse([
        `I'm sorry, I couldn't locate a ${item} on your ${list} list.`,
        `I don't see a ${item} on your ${list} list.`,
        `It looks like you don't have a ${item} on your ${list} list.`,
        `I'm sorry, I don't see a ${item} on your ${list} list.`,
        `I couldn't find a ${item} listed on your ${list} list.`
    ]);
}

/**
 * Generates a response message for when an item is found on a list.
 * @param {string} list The name of the list.
 * @param {string} item The name of the item.
 * @returns {string} The response message.
 */
export function itemFound(list: string, item: string): string {
    return getRandomResponse([
        `I found ${item} in your ${list} list.`,
        `It looks like ${item} is in your ${list} list.`,
        `You have a ${item} in your ${list} list.`,
        `The ${item} was found in your ${list} list.`,
        `A ${item} appears to be in your ${list} list.`
    ]);
}
/**
 * Generates a response message for when no lists are found.
 * @returns {string} The response message.
 */
export function noListsFound(): string {
    return getRandomResponse([
        `You don't have any lists yet.`,
        `You haven't made any lists yet.`,
        `It looks like you don't have any lists yet.`,
        `No lists have been made yet.`,
        `You don't have any lists set up yet.`
    ]);
}

/**
 * Generates a response message for when an unknown action is requested.
 * @param {string} action The name of the unknown action.
 * @returns {string} The response message.
 */
export function unknownAction(action: string): string {
    return getRandomResponse([
        `I'm sorry, I'm not sure how to ${action}.`,
        `I don't know the first thing about ${action}.`,
        `I'm not sure I'm the best person to help with ${action}.`,
        `I'm still learning about ${action}, but I'll try my best.`,
        `I'm afraid I'm not experienced enough with ${action}.`
    ]);
}

/**
 * Generates a response message for when the user asks about an off-topic subject.
 * @returns {string} The response message.
 */
export function offTopic(): string {
    return getRandomResponse([
        `I'm sorry, I'm not sure I can help you with that.`,
        `I'm sorry, I'm afraid I'm not allowed to talk about such things.`,
        `I'm sorry, I'm not sure I'm the right person to help you with that.`,
        `I wish I could help you with that, but it's not something I can talk about.`,
        `I'm sorry, I'm not allowed to discuss that topic.`
    ]);
}
/**
 * Returns a random response message from an array of possible responses.
 * @param {string[]} responses An array of possible response messages.
 * @returns {string} A randomly selected response message.
 */
function getRandomResponse(responses: string[]): string {
    const i = Math.floor(Math.random() * (responses.length - 1));
    // eslint-disable-next-line security/detect-object-injection
    return responses[i];
}
