# yaml-language-server: $schema=https://aka.ms/teams-toolkit/v1.5/yaml.schema.json
# Visit https://aka.ms/teamsfx-v5.0-guide for details on this file
# Visit https://aka.ms/teamsfx-actions for details on actions
version: v1.5

additionalMetadata:
  sampleTag: TeamsAI-Samples:datasource-azureopenai

provision:
    - uses: teamsApp/create # Creates a Teams app
      with:
          name: TeamsAzureOpenAI (${{TEAMSFX_ENV}}) # Teams app name
      writeToEnvironmentFile: # Write the information of installed dependencies into environment file for the specified environment variable(s).
          teamsAppId: TEAMS_APP_ID

    # Create or reuse an existing Microsoft Entra application for bot.
    - uses: aadApp/create
      with:
        # The Microsoft Entra application's display name
        name: TeamsAzureOpenAI (${{APP_NAME_SUFFIX}})
        generateClientSecret: true
        signInAudience: AzureADMultipleOrgs
      writeToEnvironmentFile:
      # The Microsoft Entra application's client id created for bot.
        clientId: BOT_ID
        # The Microsoft Entra application's client secret created for bot.
        clientSecret: SECRET_BOT_PASSWORD
        # The Microsoft Entra application's object id created for bot.
        objectId: BOT_OBJECT_ID

    - uses: botFramework/create # Create or update the bot registration on dev.botframework.com
      with:
          botId: ${{BOT_ID}}
          name: TeamsAzureOpenAI (${{APP_NAME_SUFFIX}})
          messagingEndpoint: ${{BOT_ENDPOINT}}/api/messages
          description: ''
          channels:
              - name: msteams

    - uses: teamsApp/validateManifest # Validate using manifest schema
      with:
          manifestPath: ./appPackage/manifest.json # Path to manifest template

    - uses: teamsApp/zipAppPackage # Build Teams app package with latest env value
      with:
          manifestPath: ./appPackage/manifest.json # Path to manifest template
          outputZipPath: ./build/appPackage/appPackage.${{TEAMSFX_ENV}}.zip
          outputJsonPath: ./build/appPackage/manifest.${{TEAMSFX_ENV}}.json

    - uses: teamsApp/update # Apply the Teams app manifest to an existing Teams app in Teams Developer Portal. Will use the app id in manifest file to determine which Teams app to update.
      with:
          appPackagePath: ./build/appPackage/appPackage.${{TEAMSFX_ENV}}.zip # Relative path to this file. This is the path for built zip file.

deploy:
    # Install any dependencies and build the web app using NPM
    - uses: cli/runNpmCommand
      name: install dependencies
      with:
          args: install --no-audit --workspaces=false
    # Provides the Teams Toolkit .env file values to the apps runtime so they can be accessed with `process.env`.
    - uses: file/createOrUpdateEnvironmentFile
      with:
          target: ./.env
          envs:
              BOT_ID: ${{BOT_ID}}
              BOT_PASSWORD: ${{SECRET_BOT_PASSWORD}}
              BOT_TENANT_ID: ${{TEAMS_APP_TENANT_ID}}
              BOT_TYPE: 'MultiTenant'
              AZURE_TENANT_ID: ${{TEAMS_APP_TENANT_ID}}
