#
# This workflow will build, run tests, and pack for the Microsoft.TeamsAI .NET SDK.
#

name: DOTNET CI

on:
  workflow_call:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: ['6.0', '7.0']
        configuration: [Release]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: dotnet/packages/Microsoft.TeamsAI/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore
        run: dotnet restore Microsoft.TeamsAI.sln

      - name: Build
        run: dotnet build Microsoft.TeamsAI.sln --no-restore --configuration ${{ matrix.configuration }}

  test:
    name: Test
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: ['6.0', '7.0']
        configuration: [Release]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: dotnet/packages/Microsoft.TeamsAI/
    env:
      SOLUTION_DIR: dotnet/packages/Microsoft.TeamsAI/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore
        run: dotnet restore Microsoft.TeamsAI.sln

      - name: Test
        run: dotnet test Microsoft.TeamsAI.Tests/Microsoft.TeamsAI.Tests.csproj --no-restore --verbosity normal --logger trx --results-directory ./TestResults --collect:"XPlat Code Coverage" --configuration ${{ matrix.configuration }}

      - name: Coverage
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.22
        with:
          reports: ${{ env.SOLUTION_DIR }}TestResults/*/coverage.cobertura.xml
          targetdir: ${{ env.SOLUTION_DIR }}TestResults/coverage
          reporttypes: HtmlInline
          toolpath: ${{ env.SOLUTION_DIR }}report-generator-tool

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: testresults-dotnet-${{ matrix.dotnet-version }}
          path: ${{ env.SOLUTION_DIR }}TestResults

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      SOLUTION_DIR: dotnet/packages/Microsoft.TeamsAI/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Lint
        uses: microsoft/devskim-action@v1
        with:
          directory-to-scan: ${{ env.SOLUTION_DIR }}
          output-filename: ${{ env.SOLUTION_DIR }}devskim-results.sarif

      - name: Upload
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.SOLUTION_DIR }}devskim-results.sarif
