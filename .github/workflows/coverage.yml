#
# This workflow will run a coverage report
#

name: Coverage

on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths: [".github/workflows/coverage.yml", "js/**", "dotnet/**", "python/**"]

permissions: read-all

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      js: ${{ steps.filter.outputs.js }}
      dotnet: ${{ steps.filter.outputs.dotnet }}
      python: ${{ steps.filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            js:
              - 'js/**'
            dotnet:
              - 'dotnet/**'
            python:
              - 'python/**'
  javascript:
    name: Javascript
    runs-on: ubuntu-latest
    environment: main
    env:
      node-version: 20.x
    defaults:
      run:
        shell: bash
        working-directory: js/
    permissions:
      contents: read
    needs: changes
    if: ${{ needs.changes.outputs.js == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup NodeJS ${{ env.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ env.node-version }}
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Test
        run: yarn test:nyc:report
      - name: Coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          flag-name: javascript
          parallel: true
          files: js/coverage/lcov.info

  dotnet:
    name: DotNet
    runs-on: windows-latest
    environment: main
    env:
      dotnet-version: 7.0
      SOLUTION_DIR: dotnet/packages/Microsoft.TeamsAI/
    defaults:
      run:
        shell: bash
        working-directory: dotnet/packages/Microsoft.TeamsAI/
    permissions:
      contents: read
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup .NET ${{ env.dotnet-version }}
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: ${{ env.dotnet-version }}
      - name: Test
        run: dotnet test Microsoft.TeamsAI.Tests/Microsoft.Teams.AI.Tests.csproj --verbosity normal --logger trx --results-directory ./TestResults --collect:"XPlat Code Coverage" --configuration Release
      - name: Coverage
        uses: danielpalme/ReportGenerator-GitHub-Action@25b1e0261a9f68d7874dbbace168300558ef68f7 # 5.4.5
        with:
          reports: ${{ env.SOLUTION_DIR }}TestResults/*/coverage.cobertura.xml
          targetdir: ${{ env.SOLUTION_DIR }}TestResults/coverage
          reporttypes: "HtmlInline;lcov"
          toolpath: ${{ env.SOLUTION_DIR }}report-generator-tool
      - name: Coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          flag-name: dotnet
          parallel: true
          files: ${{ env.SOLUTION_DIR }}TestResults/coverage/lcov.info
      - name: Upload Tests
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: testresults-dotnet-${{ env.dotnet-version }}
          path: ${{ env.SOLUTION_DIR }}TestResults

  python:
    name: Python
    runs-on: ubuntu-latest
    environment: main
    env:
      python-version: 3.9
    defaults:
      run:
        working-directory: python/packages/ai
    permissions:
      contents: read
    needs: changes
    if: ${{ needs.changes.outputs.python == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Python ${{ env.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Test
        run: |
          poetry run test
      - name: Coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          flag-name: python
          parallel: true
          files: python/packages/ai/coverage/lcov.info

  finish:
    needs: [javascript, dotnet, python]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: "javascript,dotnet,python"
