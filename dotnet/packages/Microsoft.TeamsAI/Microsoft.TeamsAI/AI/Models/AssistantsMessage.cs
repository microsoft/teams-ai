using OpenAI.Assistants;

namespace Microsoft.Teams.AI.AI.Models
{
    /// <summary>
    /// Represents a message returned by the OpenAI Assistants API.
    /// </summary>
    public class AssistantsMessage : ChatMessage
    {
        /// <summary>
        /// The message contents from an assistants api response.
        /// </summary>
        public MessageContent MessageContent;

        /// <summary>
        /// Creates an AssistantMessage.
        /// </summary>
        /// <param name="content">The Assistants API thread message.</param>
        public AssistantsMessage(MessageContent content) : base(ChatRole.Assistant)
        {
            this.MessageContent = content;

            if (content != null)
            {
                string? textContent = content.Text;
                if (content.Text != null && content.Text != string.Empty)
                {
                    this.Content = content.Text;
                }

                MessageContext context = new();
                for (int i = 0; i < content.TextAnnotations.Count; i++)
                {
                    TextAnnotation annotation = content.TextAnnotations[i];
                    if (annotation?.TextToReplace != null)
                    {
                        textContent.Replace(annotation.TextToReplace, $"[{i}]");
                    }

                    if (annotation?.InputFileId != null)
                    {
                        // Retrieve file info object
                        // Neither `content` or `title` is provided in the annotations
                        context.Citations.Add(new("", "", annotation.InputFileId));
                    }

                    if (annotation?.OutputFileId != null)
                    {
                        // TODO: Download files or provide link to end user.
                        // Files were generated by code interpretor tool.
                    }
                }

                Context = context;
            }
        }
    }
}
